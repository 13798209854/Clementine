diff --git a/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.cpp b/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.cpp
index b3759cb..07d8818 100644
--- a/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.cpp
+++ b/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.cpp
@@ -202,10 +202,12 @@ QByteArray*  PythonQtWrapper_QByteArray::append(QByteArray* theWrappedObject, co
   return &( theWrappedObject->append(a));
 }
 
+#ifndef QT_NO_CAST_TO_ASCII
 QByteArray*  PythonQtWrapper_QByteArray::append(QByteArray* theWrappedObject, const QString&  s)
 {
   return &( theWrappedObject->append(s));
 }
+#endif
 
 QByteArray*  PythonQtWrapper_QByteArray::append(QByteArray* theWrappedObject, const char*  s, int  len)
 {
@@ -297,10 +299,12 @@ int  PythonQtWrapper_QByteArray::indexOf(QByteArray* theWrappedObject, const QBy
   return ( theWrappedObject->indexOf(a, from));
 }
 
+#ifndef QT_NO_CAST_TO_ASCII
 int  PythonQtWrapper_QByteArray::indexOf(QByteArray* theWrappedObject, const QString&  s, int  from) const
 {
   return ( theWrappedObject->indexOf(s, from));
 }
+#endif
 
 QByteArray*  PythonQtWrapper_QByteArray::insert(QByteArray* theWrappedObject, int  i, char  c)
 {
@@ -312,10 +316,12 @@ QByteArray*  PythonQtWrapper_QByteArray::insert(QByteArray* theWrappedObject, in
   return &( theWrappedObject->insert(i, a));
 }
 
+#ifndef QT_NO_CAST_TO_ASCII
 QByteArray*  PythonQtWrapper_QByteArray::insert(QByteArray* theWrappedObject, int  i, const QString&  s)
 {
   return &( theWrappedObject->insert(i, s));
 }
+#endif
 
 QByteArray*  PythonQtWrapper_QByteArray::insert(QByteArray* theWrappedObject, int  i, const char*  s, int  len)
 {
@@ -342,10 +348,12 @@ int  PythonQtWrapper_QByteArray::lastIndexOf(QByteArray* theWrappedObject, const
   return ( theWrappedObject->lastIndexOf(a, from));
 }
 
+#ifndef QT_NO_CAST_TO_ASCII
 int  PythonQtWrapper_QByteArray::lastIndexOf(QByteArray* theWrappedObject, const QString&  s, int  from) const
 {
   return ( theWrappedObject->lastIndexOf(s, from));
 }
+#endif
 
 QByteArray  PythonQtWrapper_QByteArray::left(QByteArray* theWrappedObject, int  len) const
 {
@@ -522,20 +530,24 @@ QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, c
   return &( theWrappedObject->replace(before, after));
 }
 
+#ifndef QT_NO_CAST_TO_ASCII
 QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, char  c, const QString&  after)
 {
   return &( theWrappedObject->replace(c, after));
 }
+#endif
 
 QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, const QByteArray&  before, const QByteArray&  after)
 {
   return &( theWrappedObject->replace(before, after));
 }
 
+#ifndef QT_NO_CAST_TO_ASCII
 QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, const QString&  before, const QByteArray&  after)
 {
   return &( theWrappedObject->replace(before, after));
 }
+#endif
 
 QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, const char*  before, int  bsize, const char*  after, int  asize)
 {
diff --git a/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.h b/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.h
index 56e8bf0..9be4d90 100644
--- a/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.h
+++ b/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.h
@@ -80,7 +80,9 @@ QByteArray* new_QByteArray(int  size, char  c);
 void delete_QByteArray(QByteArray* obj) { delete obj; } 
    QByteArray*  append(QByteArray* theWrappedObject, char  c);
    QByteArray*  append(QByteArray* theWrappedObject, const QByteArray&  a);
+#ifndef QT_NO_CAST_TO_ASCII
    QByteArray*  append(QByteArray* theWrappedObject, const QString&  s);
+#endif
    QByteArray*  append(QByteArray* theWrappedObject, const char*  s, int  len);
    char  at(QByteArray* theWrappedObject, int  i) const;
    int  capacity(QByteArray* theWrappedObject) const;
@@ -99,16 +101,22 @@ void delete_QByteArray(QByteArray* obj) { delete obj; }
    QByteArray  static_QByteArray_fromPercentEncoding(const QByteArray&  pctEncoded, char  percent = '%');
    int  indexOf(QByteArray* theWrappedObject, char  c, int  from = 0) const;
    int  indexOf(QByteArray* theWrappedObject, const QByteArray&  a, int  from = 0) const;
+#ifndef QT_NO_CAST_TO_ASCII
    int  indexOf(QByteArray* theWrappedObject, const QString&  s, int  from = 0) const;
+#endif
    QByteArray*  insert(QByteArray* theWrappedObject, int  i, char  c);
    QByteArray*  insert(QByteArray* theWrappedObject, int  i, const QByteArray&  a);
+#ifndef QT_NO_CAST_TO_ASCII
    QByteArray*  insert(QByteArray* theWrappedObject, int  i, const QString&  s);
+#endif
    QByteArray*  insert(QByteArray* theWrappedObject, int  i, const char*  s, int  len);
    bool  isEmpty(QByteArray* theWrappedObject) const;
    bool  isNull(QByteArray* theWrappedObject) const;
    int  lastIndexOf(QByteArray* theWrappedObject, char  c, int  from = -1) const;
    int  lastIndexOf(QByteArray* theWrappedObject, const QByteArray&  a, int  from = -1) const;
+#ifndef QT_NO_CAST_TO_ASCII
    int  lastIndexOf(QByteArray* theWrappedObject, const QString&  s, int  from = -1) const;
+#endif
    QByteArray  left(QByteArray* theWrappedObject, int  len) const;
    QByteArray  leftJustified(QByteArray* theWrappedObject, int  width, char  fill = ' ', bool  truncate = false) const;
    int  length(QByteArray* theWrappedObject) const;
@@ -144,9 +152,13 @@ void delete_QByteArray(QByteArray* obj) { delete obj; }
    QByteArray  repeated(QByteArray* theWrappedObject, int  times) const;
    QByteArray*  replace(QByteArray* theWrappedObject, char  before, char  after);
    QByteArray*  replace(QByteArray* theWrappedObject, char  before, const QByteArray&  after);
+#ifndef QT_NO_CAST_TO_ASCII
    QByteArray*  replace(QByteArray* theWrappedObject, char  c, const QString&  after);
+#endif
    QByteArray*  replace(QByteArray* theWrappedObject, const QByteArray&  before, const QByteArray&  after);
+#ifndef QT_NO_CAST_TO_ASCII
    QByteArray*  replace(QByteArray* theWrappedObject, const QString&  before, const QByteArray&  after);
+#endif
    QByteArray*  replace(QByteArray* theWrappedObject, const char*  before, int  bsize, const char*  after, int  asize);
    QByteArray*  replace(QByteArray* theWrappedObject, int  index, int  len, const QByteArray&  s);
    void reserve(QByteArray* theWrappedObject, int  size);
diff --git a/3rdparty/pythonqt/qt-no-cast-to-ascii.patch b/3rdparty/pythonqt/qt-no-cast-to-ascii.patch
index f2f1922..3960a99 100644
--- a/3rdparty/pythonqt/qt-no-cast-to-ascii.patch
+++ b/3rdparty/pythonqt/qt-no-cast-to-ascii.patch
@@ -1,81 +0,0 @@
-diff --git a/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.cpp b/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.cpp
-index b3759cb..07d8818 100644
---- a/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.cpp
-+++ b/3rdparty/pythonqt/generated_cpp/com_trolltech_qt_core_builtin/com_trolltech_qt_core_builtin0.cpp
-@@ -202,10 +202,12 @@ QByteArray*  PythonQtWrapper_QByteArray::append(QByteArray* theWrappedObject, co
-   return &( theWrappedObject->append(a));
- }
- 
-+#ifndef QT_NO_CAST_TO_ASCII
- QByteArray*  PythonQtWrapper_QByteArray::append(QByteArray* theWrappedObject, const QString&  s)
- {
-   return &( theWrappedObject->append(s));
- }
-+#endif
- 
- QByteArray*  PythonQtWrapper_QByteArray::append(QByteArray* theWrappedObject, const char*  s, int  len)
- {
-@@ -297,10 +299,12 @@ int  PythonQtWrapper_QByteArray::indexOf(QByteArray* theWrappedObject, const QBy
-   return ( theWrappedObject->indexOf(a, from));
- }
- 
-+#ifndef QT_NO_CAST_TO_ASCII
- int  PythonQtWrapper_QByteArray::indexOf(QByteArray* theWrappedObject, const QString&  s, int  from) const
- {
-   return ( theWrappedObject->indexOf(s, from));
- }
-+#endif
- 
- QByteArray*  PythonQtWrapper_QByteArray::insert(QByteArray* theWrappedObject, int  i, char  c)
- {
-@@ -312,10 +316,12 @@ QByteArray*  PythonQtWrapper_QByteArray::insert(QByteArray* theWrappedObject, in
-   return &( theWrappedObject->insert(i, a));
- }
- 
-+#ifndef QT_NO_CAST_TO_ASCII
- QByteArray*  PythonQtWrapper_QByteArray::insert(QByteArray* theWrappedObject, int  i, const QString&  s)
- {
-   return &( theWrappedObject->insert(i, s));
- }
-+#endif
- 
- QByteArray*  PythonQtWrapper_QByteArray::insert(QByteArray* theWrappedObject, int  i, const char*  s, int  len)
- {
-@@ -342,10 +348,12 @@ int  PythonQtWrapper_QByteArray::lastIndexOf(QByteArray* theWrappedObject, const
-   return ( theWrappedObject->lastIndexOf(a, from));
- }
- 
-+#ifndef QT_NO_CAST_TO_ASCII
- int  PythonQtWrapper_QByteArray::lastIndexOf(QByteArray* theWrappedObject, const QString&  s, int  from) const
- {
-   return ( theWrappedObject->lastIndexOf(s, from));
- }
-+#endif
- 
- QByteArray  PythonQtWrapper_QByteArray::left(QByteArray* theWrappedObject, int  len) const
- {
-@@ -522,20 +530,24 @@ QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, c
-   return &( theWrappedObject->replace(before, after));
- }
- 
-+#ifndef QT_NO_CAST_TO_ASCII
- QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, char  c, const QString&  after)
- {
-   return &( theWrappedObject->replace(c, after));
- }
-+#endif
- 
- QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, const QByteArray&  before, const QByteArray&  after)
- {
-   return &( theWrappedObject->replace(before, after));
- }
- 
-+#ifndef QT_NO_CAST_TO_ASCII
- QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, const QString&  before, const QByteArray&  after)
- {
-   return &( theWrappedObject->replace(before, after));
- }
-+#endif
- 
- QByteArray*  PythonQtWrapper_QByteArray::replace(QByteArray* theWrappedObject, const char*  before, int  bsize, const char*  after, int  asize)
- {
